\input{../../preamble}
\input{preamble}

\title{Two-variable adjunctions}
\author{Arpon Raksit}
\date{November 28, 2013 (original); \today\ (last edit)}

\begin{document}
\maketitle
\thispagestyle{fancy}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\renewcommand{\X}{\mathcal{X}}
\renewcommand{\Y}{\mathcal{Y}}
\renewcommand{\Z}{\mathcal{Z}}
\renewcommand{\C}{\mathcal{C}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{What are they?}

\begin{notation}
  We fix categories $\X$, $\Y$, and $\Z$.
\end{notation}

\begin{definition}
  \label{twovaradj}
  A \emph{two-variable adjunction} is the data of a bifunctor $-
  \otimes - : \X \times \Y \to \Z$ such that:
  \begin{enumerate}
  \item the functor $x \otimes - : \Y \to \Z$ has a right adjoint for
    each $x \in \ob(\X)$,
  \item the functor $- \otimes y : \X \to \Z$ has a right adjoint for
    each $y \in \ob(\Y)$.
  \end{enumerate}
\end{definition}

\begin{lemma}
  \label{bifunctor-one}
  If $- \otimes - : \X \times \Y \to \Z$ satisfies condition
  (\ref{twovaradj}.1), the given right adjoints assemble into a
  bifunctor $[-,-] : \X^\op \times \Z \to \Y$ such that the adjunction
  $\hom_\Z(x \otimes y, z) \simeq \hom_\Y(y, [x,z])$ is natural in all
  three variables.
\end{lemma}

\begin{proof}
  For $x \in \ob(\X)$ we suggestively denote the given right adjoint
  of $x \otimes -$ by $[x,-]$. Then for $f : x \to x'$ in $\X$ and $z
  \in \ob(\Z)$ we get a natural transformation
  \[
    \hom_\Z(-, [x',z]) \simeq \hom_\Z(x' \otimes -, z)
    \xrightarrow{\hom_\Z(f \otimes -,z)} \hom_\Z(x \otimes -, z)
    \simeq \hom_\Y(-, [x,z])
  \]
  which by the Yoneda lemma comes from a unique morphism $[x',z] \to
  [x,z]$. By construction this gives the required bifunctor $[-,-] :
  \X^\op \times \Z \to \Y$.
\end{proof}

\begin{lemma}
  \label{bifunctor-two}
  If $- \otimes - : \X \times \Y \to \Z$ satisfies condition
  (\ref{twovaradj}.2), the given right adjoints assemble into a
  bifunctor $\langle -,- \rangle : \Y^\op \times \Z \to \X$ such that
  the adjunction $\hom_\Z(x \otimes y, z) \simeq \hom_\X(x, \langle
  y,z \rangle)$ is natural in all three variables.
\end{lemma}

\begin{proof}
  Symmetric to (\ref{bifunctor-one}).
\end{proof}

\begin{corollary}
  \label{twovaradj-strong}
  Giving a two-variable adjunction is equivalent to giving bifunctors
  \[
  - \otimes - : \X \times \Y \to \Z, \quad [-,-] : \X^\op \times \Z
  \to \Y, \quad \langle -,- \rangle : \Y^\op \times \Z \to \X
  \]
  such that we have adjunctions, natural in all three variables,
  \[
  \hom_\Y(y, [x,z]) \simeq \hom_\Z(x \otimes y, z) \simeq \hom_\X(x,
  \langle y,z \rangle).
  \]
\end{corollary}

\begin{proof}
  Clearly giving such functors determines the data of a two-variable
  adjunction. The converse is immediate from (\ref{bifunctor-one}) and
  (\ref{bifunctor-two}).
\end{proof}

\begin{remark}
  Hopefully the notation is suggestive enough that the dualities
  aren't too confusing. If not, the following motivating example
  should help---if the notation doesn't make you cry, that is.
\end{remark}

\newcommand{\bHom}{\operatorname{\textbf{Hom}}}
\newcommand{\bhom}{\operatorname{\textbf{hom}}}

\begin{example}
  A category $\C$ is called a \emph{simplicial category} if there are
  bifunctors
  \[
  - \otimes - : \C \times \s\Set \to \C, \quad \bHom : \C^\op \times
  \C \to \s\Set, \quad \bhom : \s\Set^\op \times \C \to \C,
  \]
  which (satisfy some conditions not relevant to our current
  discussion and) determine a two variable adjunction:
  \[
  \hom_{\s\Set}(K, \bHom(A,B)) \simeq \hom_\C(A \otimes K, B) \simeq
  \hom_\C(A, \bhom(K,B)),
  \]
  naturally in $A,B \in \ob(\C)$ and $K \in \ob(\s\Set)$
  \cite{goerssjardine}. In particular it's easy to see what these
  functors should be when $\C = \s\Set$: $\otimes$ is simply the
  product and $\bHom$ and $\bhom$ are both just the internal mapping
  object.

  \medskip
  In the notation used above, we have:
  \begin{itemize}
  \item $\X = \Z = \C$ and $\Y = \s\Set$;
  \item $\otimes = \otimes$, $[-,-] = \bHom$, and $\langle -,- \rangle
    = \bhom$.
  \end{itemize}
  Thus we think of $[-,-]$ and $\langle -,- \rangle$ as mapping
  objects, each adjoint to a tensor operation $\otimes$.
\end{example}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{The arrow categories}

It's useful when you have a two-variable adjunction to be able to take
a certain commutative diagram and say it corresponds precisely to
another commutative diagram via the adjunctions, e.g.,
\cite[I.5.2]{goerssjardine}. There's a super elegant way to package
this type of argument formally and precisely \cite{riehl-personal}.

\newcommand{\Arr}{\operatorname{Arr}}

\begin{definition}
  Recall $[1]$ denotes the category $0 \to 1$. Thus a functor $[1]
  \to \X$ is an arrow in $\X$ and a natural transformation of such
  functors a commutative square. The functor category $\X^{[1]}$ is
  thus called the \emph{arrow category} of $\X$ and denoted
  $\Arr(\X)$.
\end{definition}

\begin{situation}
  We assume for the remainder that $\Z$ has pushouts.
\end{situation}

\newcommand{\leib}{\mathbin{\widehat\otimes}}

\begin{definition}
  Suppose we have a bifunctor $- \otimes - : \X \times \Y \to \Z$. The
  \emph{Leibniz construction} gives a bifunctor $- \leib - : \Arr(\X)
  \times \Arr(\Y) \to \Arr(\Z)$ as follows. Let $f : x \to x' \in
  \Arr(\X)$ and $g : y \to y' \in \Arr(\Y)$. We define $f \leib g$ via
  the pushout diagram
  \[
  \begin{tikzcd}[row sep = scriptsize]
    x \otimes y \rar{x \otimes g} \dar{f \otimes y} & x \otimes y'
    \ar[bend left]{ddr}{f \otimes y'} \dar{\incl} \\ x' \otimes y
    \ar[bend right = 20]{rrd}{x' \otimes g} \rar{\incl} & x' \otimes y
    \cup_{x \otimes y} x \otimes y' \ar[dashed]{dr}{f \leib g}\\ & &
    x' \otimes y'.
  \end{tikzcd}
  \]
  If $\oline f : \oline x \to \oline x' \in \Arr(\X)$ is another
  morphism, then a morphism $f \to \oline f$ in $\Arr(\X)$ gives via
  the universal property of the pushout a diagram (which the reader is
  trusted to finish labelling)
  \[
  \begin{tikzcd}[row sep = tiny, column sep = tiny]
    \ & \oline x \otimes y \ar{rr} \ar{dd} & & \oline x \otimes y'
    \ar{dd} \\ x \otimes y \ar[crossing over]{rr} \ar{dd} \ar{ur} & &
    x \otimes y' \ar{ur} & \\ \ & \oline x' \otimes y \ar{rr} & &
    \oline x' \otimes y \cup_{x \otimes y} \oline x \otimes y'
    \ar{rr}{\oline f \leib g} & & \oline x' \otimes y'. \\ x' \otimes
    y \ar{rr} \ar{ur} & & x' \otimes y \cup_{x \otimes y} x \otimes y'
    \ar[crossing over, leftarrow]{uu} \ar[dashed]{ur} \ar{rr}{f \leib
      g} & & x' \otimes y' \ar[dashed]{ur}
  \end{tikzcd}
  \]
  This gives a morphism $f \leib g \to \oline f \leib g$ in
  $\Arr(\Z)$. Of course this works symmetrically for a morphism $g \to
  \oline g$ in $\Arr(\Y)$, and hence $\leib$ indeed gives a bifunctor.
\end{definition}

\begin{lemma}
  
\end{lemma}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibliographystyle{amsalpha}
\bibliography{refs}

\end{document}
